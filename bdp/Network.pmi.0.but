Flag(FileOn("Network.pmi.0.res")) & Set(toto | masterUser: USERS & masterUser: users & hasNoRRights: contents <-> users & dom(hasNoRRights|>{masterUser}) = {} & dom(hasWRights|>{masterUser}) = contents & !user.(user: users => dom(getContentOwner|>{user}): POW(dom(hasWRights|>{user})) & dom(getContentOwner|>{user})/\dom(hasNoRRights|>{user}) = {}) & not(dom(getContentOwner|>{masterUser}) = {}) & dom(getContentOwner|>{masterUser}): POW(dom(hasWRights|>{masterUser})) & dom(getContentOwner|>{masterUser})/\dom(hasNoRRights|>{masterUser}) = {} & dom(getContentOwner|>{from})/\dom(hasNoRRights|>{from}) = {} & content: CONTENTS & content: contents & target: USERS & target: users & not(dom(getContentOwner|>{target}) = {}) & dom(getContentOwner|>{target}): POW(dom(hasWRights|>{target})) & dom(getContentOwner|>{target})/\dom(hasNoRRights|>{target}) = {} & not(target = from) & not(target = masterUser) & (getContentOwner(content) = from or from = masterUser) & target|->content: users*contents & target|->content: users*CONTENTS & target|->content: USERS*contents & target|->content: USERS*CONTENTS & content: dom(hasWRights|>{masterUser}) & content: dom(getContentOwner) & target: dom(pseudos) & target: dom(shadow) & target: dom(getAge) & target: dom(getGender) & masterUser: dom(pseudos) & masterUser: dom(shadow) & masterUser: dom(getAge) & masterUser: dom(getGender) & 18<=getAge(target) & 18<=getAge(masterUser) => (not(target|->content: hasNoRRights~) => not(masterUser: dom(hasNoRRights~))))