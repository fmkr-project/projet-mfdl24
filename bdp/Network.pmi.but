Flag(FileOn("Network.pmi.res")) & Set(toto | masterUser: USERS & masterUser: users & hasWRights: contents <-> users & dom(hasNoRRights|>{masterUser}) = {} & dom(hasWRights|>{masterUser}) = contents & content: CONTENTS & content: contents & target: USERS & target: users & not(target = from) & not(target = masterUser) & (getContentOwner(content) = from or from = masterUser) & masterUser: dom(pseudos) & masterUser: dom(shadow) & masterUser: dom(getAge) & masterUser: dom(getGender) & target|->content: users*contents & target|->content: users*CONTENTS & target|->content: USERS*contents & target|->content: USERS*CONTENTS & content: dom(hasWRights|>{masterUser}) & content: dom(getContentOwner) & target: dom(pseudos) & target: dom(shadow) & target: dom(getAge) & target: dom(getGender) & target|->content: dom(getGender)*dom(getContentOwner) & target|->content: dom(getGender)*dom(hasWRights|>{masterUser}) & target|->content: dom(getGender)*contents & target|->content: dom(getGender)*CONTENTS & target|->content: dom(getAge)*dom(getContentOwner) & target|->content: dom(getAge)*dom(hasWRights|>{masterUser}) & target|->content: dom(getAge)*contents & target|->content: dom(getAge)*CONTENTS & target|->content: dom(shadow)*dom(getContentOwner) & target|->content: dom(shadow)*dom(hasWRights|>{masterUser}) => (not(target|->content: hasWRights~) => hasWRights~[{masterUser}] = hasWRights~[{masterUser}]))