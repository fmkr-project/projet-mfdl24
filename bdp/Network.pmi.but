Flag(FileOn("Network.pmi.res")) & Set(toto | masterUser: USERS & users: POW(USERS) & masterUser: users & getContentOwner: contents +-> users & dom(getContentOwner) = contents & getContentOwner: contents --> users & from: USERS & from: users & from: loggedUsers & content: CONTENTS & content: contents & target: USERS & target: users & user: users & getContentOwner: contents +-> users & dom(getContentOwner) = contents & getContentOwner: contents --> users & hasNoRRights: contents <-> users & dom(hasNoRRights|>{masterUser}) = {} & !user.(user: users => dom(getContentOwner|>{user}): POW(dom(hasWRights|>{user})) & dom(getContentOwner|>{user})/\dom(hasNoRRights|>{user}) = {}) & !user.(user: users => not(dom(getContentOwner|>{user}) = {})) & not(dom(getContentOwner|>{masterUser}) = {}) & dom(getContentOwner|>{masterUser}): POW(dom(hasWRights|>{masterUser})) & dom(getContentOwner|>{masterUser})/\dom(hasNoRRights|>{masterUser}) = {} & not(dom(getContentOwner|>{from}) = {}) & dom(getContentOwner|>{from}): POW(dom(hasWRights|>{from})) & dom(getContentOwner|>{from})/\dom(hasNoRRights|>{from}) = {} & content: CONTENTS & content: contents & target: USERS & target: users & not(dom(getContentOwner|>{target}) = {}) & dom(getContentOwner|>{target}): POW(dom(hasWRights|>{target})) & dom(getContentOwner|>{target})/\dom(hasNoRRights|>{target}) = {} & not(target = from) & not(target = masterUser) & (getContentOwner(content) = from or from = masterUser) & user: users & not(dom(getContentOwner|>{user}) = {}) & dom(getContentOwner|>{user}): POW(dom(hasWRights|>{user})) & dom(getContentOwner|>{user})/\dom(hasNoRRights|>{user}) = {} => dom(getContentOwner|>{user})/\dom(hasNoRRights-{content|->target}|>{user}) = {})